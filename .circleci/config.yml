version: 2.1

jobs:
  unit_tests:
    docker:
      - image: circleci/openjdk:11  # OpenJDK 11 para pruebas unitarias
    steps:
      - checkout  # Descargar el código fuente

      # Instalar dependencias necesarias
      - run:
          name: Instalar dependencias básicas
          command: |
            sudo apt-get update
            sudo apt-get install -y default-jdk maven

      # Compilar el proyecto sin ejecutar pruebas
      - run:
          name: Compilar el proyecto
          command: mvn clean install -DskipTests

      # Ejecutar pruebas unitarias (sin incluir UserDAOTest)
      - run:
          name: Ejecutar pruebas unitarias
          command: mvn test -Dtest=!UserDAOTest

  integration_tests:
    docker:
      - image: circleci/openjdk:11
      - image: circleci/mysql:8.0  # Base de datos MySQL para pruebas de integración
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: calidad2024
    steps:
      - checkout  # Descargar el código fuente

      # Instalar dependencias necesarias
      - run:
          name: Instalar dependencias básicas
          command: |
            sudo apt-get update
            sudo apt-get install -y default-jdk maven

      # Esperar a que MySQL esté disponible
      - run:
          name: Esperar a que MySQL esté listo
          command: |
            for i in {1..10}; do
              nc -z localhost 3306 && break
              echo "Esperando MySQL..."
              sleep 5
            done

      # Configurar base de datos inicial para DBUnit
      - run:
          name: Configurar base de datos inicial
          command: |
            mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS calidad2024;"

      # Compilar el proyecto sin ejecutar pruebas
      - run:
          name: Compilar el proyecto
          command: mvn clean install -DskipTests

      # Ejecutar pruebas de integración
      - run:
          name: Ejecutar pruebas de integración
          command: mvn test -Dtest=UserDAOTest

  functional_tests:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout  # Descargar el código fuente

      # Instalar Chrome y ChromeDriver
      - run:
          name: Instalar Google Chrome y ChromeDriver
          command: |
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            CHROME_DRIVER_VERSION=$(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
            wget -N https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/chromedriver

      # Compilar el proyecto sin ejecutar pruebas
      - run:
          name: Compilar el proyecto
          command: mvn clean install -DskipTests

      # Ejecutar pruebas funcionales
      - run:
          name: Ejecutar pruebas funcionales
          command: mvn test -Dtest=CRUDSeleniumTest

workflows:
  version: 2
  build_and_test:
    jobs:
      - unit_tests
      - integration_tests:
          requires:
            - unit_tests
      - functional_tests:
          requires:
            - integration_tests
